# The IniShiroFilter configuration is very powerful and flexible, while still remaining succinct.
# Please read the org.apache.shiro.web.servlet.IniShiroFilter JavaDoc for information.

[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager
dbRealm = de.iai.ilcd.security.sql.IlcdSecurityRealm
bearerRealm = de.iai.ilcd.security.jwt.BearerRealm
bearerRealmOLD = de.iai.ilcd.security.jwtold.BearerRealmOLD
pac4jRealm = io.buji.pac4j.realm.Pac4jRealm
pac4jRealm.principalNameAttribute = preferred_username

securityManager.realms = $dbRealm, $bearerRealm, $bearerRealmOLD, $pac4jRealm

#bearerAuthc = de.iai.ilcd.util.AuthenticationFilter

jwtv = de.iai.ilcd.security.jwt.JWTVerifyingFilter
authAnon = de.iai.ilcd.security.AuthenticationAccessFilter

# Caching of authz infos
#cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager

# Factory for soda4LCA specific subjects
; subjectFactory = de.iai.ilcd.security.SodaSubjectFactory

#securityManager.cacheManager = $cacheManager
; securityManager.subjectFactory = $subjectFactory

shiro.loginUrl = /login.xhtml
shiro.unauthorizedUrl = /roleerror.xhtml



oidcConfig = de.iai.ilcd.security.oidc.OIDCConfig
oidClient = org.pac4j.oidc.client.OidcClient
oidClient.configuration = $oidcConfig

callbackUrl = de.iai.ilcd.security.oidc.CallbackUrl
clients.callbackUrl = $callbackUrl
clients.clients = $oidClient
defaultUrl = de.iai.ilcd.security.oidc.CallbackFilterDefaultUrl
callbackFilter.defaultUrl = $defaultUrl


requireRoleAdmin = org.pac4j.core.authorization.authorizer.RequireAnyRoleAuthorizer
requireRoleAdmin.elements = ROLE_ADMIN, ADMIN_AREA

config.authorizers = admin:$requireRoleAdmin

oidcSecurityFilter = io.buji.pac4j.filter.SecurityFilter
oidcSecurityFilter.config = $config
oidcSecurityFilter.clients = OidcClient


pac4jCentralLogout = io.buji.pac4j.filter.LogoutFilter
pac4jCentralLogout.config = $config
pac4jCentralLogout.localLogout = true
pac4jCentralLogout.centralLogout = true
pac4jCentralLogout.logoutUrlPattern = /.*
pac4jCentralLogout.defaultUrl=$defaultUrl


invalidRequest.blockNonAscii = false

[users]
# format: username = password, role1, role2, ..., roleN

[roles]
# format; roleName = permission1, permission2, ..., permissionN
#admin = *


[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
# samples
# /account/** = authc
# /remoting/** = authc, roles[b2bClient], perms["remote:invoke:lan,wan"]

/admin/** = perms[ADMIN_AREA]

/resource/authenticate/** = authAnon
/resource/** = noSessionCreation, jwtv


/oidc.xhtml = oidcSecurityFilter

/postauth = callbackFilter
/logout = pac4jCentralLogout

/** = anon
